generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id             Int    @id @default(autoincrement())
  name           String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  description    String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_description String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_name        String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
}

model cities {
  id      Int    @id @default(autoincrement())
  name    String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  zipcode Int    @default(0) @db.MediumInt
  ar_name String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
}

model featurename {
  id             Int    @id @default(autoincrement())
  name           String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  description    String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_description String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_name        String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
}

model features {
  id        Int @id @default(autoincrement())
  venueID   Int
  featureID Int

  @@index([venueID], map: "FK_features_venues")
  @@index([featureID], map: "FK_featureID")
}

model payments {
  id          Int      @id
  userID      Int
  reserveID   Int
  paymentDate DateTime @default(now()) @db.Timestamp(0)
  status      String   @default("pending") @db.VarChar(20)
  amount      Int      @default(0) @db.SmallInt

  @@index([reserveID], map: "FK_payments_reservations")
  @@index([userID], map: "FK_payments_users")
}

model reservations {
  id           Int      @id @default(autoincrement())
  userID       Int?
  venueID      Int?
  paymentID    Int?
  reserveDate  DateTime @default(now()) @db.Timestamp(0)
  cost         Int      @default(0)
  startTime    DateTime @db.Date
  endTime      DateTime @db.Date
  guestsNumber Int      @db.SmallInt

  @@index([paymentID], map: "FK_reservations_payments")
  @@index([userID], map: "FK_reservations_users")
  @@index([venueID], map: "FK_reservations_venues")
}

model reviews {
  id          Int    @id @default(autoincrement())
  venueID     Int
  userID      Int
  rating      Int    @default(0) @db.TinyInt
  heading     String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  description String @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text

  @@index([userID], map: "FK_reviews_users")
  @@index([venueID], map: "FK_reviews_venues")
}

model users {
  id                Int      @id @default(autoincrement())
  firstName         String?  @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  lastName          String?  @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  phoneNumber       String?  @default("") @db.VarChar(16)
  address           String?  @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  email             String   @db.TinyText
  username          String   @db.VarChar(48)
  password          String?  @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  registerationDate DateTime @default(now()) @db.Timestamp(0)
  country           String?  @default("Egypt") @db.VarChar(56)
  clerkID           String   @db.Text
}

model venues {
  id             Int     @id @default(autoincrement())
  name           String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  capacity       Int?    @default(0) @db.SmallInt
  description    String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  rating         Int?    @default(0) @db.TinyInt
  price          Int?    @default(0)
  space          Int?    @default(0) @db.SmallInt
  rules          String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  policy         String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_description String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_name        String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.TinyText
  ar_policy      String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  ar_rules       String? @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text
  categoryID     Int
  cityID         Int

  @@index([categoryID], map: "FK_venues_categories")
  @@index([cityID], map: "FK_venues_cities")
}

model visited_venues {
  id        Int      @id @default(autoincrement())
  venueID   Int
  userID    Int
  visitDate DateTime @default(now()) @db.Timestamp(0)

  @@index([userID], map: "FK_user")
  @@index([venueID], map: "FK_venue")
}
